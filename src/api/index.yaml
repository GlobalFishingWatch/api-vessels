swagger: '2.0'
info:
  version: 1.0.0
  title: Vessels
  description: |
    The GFW Vessel API allows third parties to request aggregated information about vessels, such as identifiers, characteristics and tracks.

definitions:
  ValidationError:
    type: object
    required:
      - fields
      - general
    properties:
      fields:
        type: array
        items:
          type: object
          required:
            - field
            - errors
          properties:
            field:
              type: string
            errors:
              type: array
              items:
                type: object
                required:
                  - code
                  - description
                properties:
                  code:
                    type: string
                  description:
                    type: string
      general:
        type: array
        items:
          type: object
          required:
            - code
            - description
          properties:
            code:
              type: string
            description:
              type: string

responses:
  BadRequest:
    description: |
      Bad request. Invalid or wrong parameters were provided.
    schema:
      $ref: '#/definitions/ValidationError'

  Unauthorized:
    description: |
      Unauthorized, either the api key is invalid or expired.

  NotFound:
    description: |
      Not found. Either the dataset does not exist, or the specific entity
      which was requested does not exist.

paths:

  "/tilesets/{tileset}/vessels":
    get:
      summary: |
        Searches for vessels
      description: |
        Searches for a vessel given a free form query.The query will be matched against any identifiers for the vessel, and a paginated, ranked results list will be returned. This endpoint only returns vessels associated with a given tileset.
      produces:
        - application/json
      parameters:
        - name: tileset
          in: path
          description: |
            Tileset to look the vessel from
          required: true
          type: string
        - name: query
          in: query
          description: |
            Search query.
          required: true
          type: string
        - name: limit
          in: query
          description: |
            Amount of search results to return. Maximum 25.
          required: false
          type: integer
          maximum: 25
          default: 10
        - name: offset
          in: query
          description: |
            Offset into the search results, used for pagination.
          required: false
          type: integer
          default: 0
      responses:
        '200':
          description: |
            Expected response to a successful request.
        '401':
          $ref: '#/responses/Unauthorized'
        '400':
          $ref: '#/responses/BadRequest'

  "/tilesets/{tileset}/vessels/{vesselId}":
    get:
      summary: |
        Obtains the characteristics of a single vessel
      description: |
        Obtains all the characteristics that describe a single vessel, such as its name and identifiers.
      produces:
        - application/json
      parameters:
        - name: tileset
          in: path
          description: |
            Tileset to query the vessel from
          required: true
          type: string
        - name: vesselId
          in: path
          description: |
            Id of the vessel to get the characteristics from
          required: true
          type: string
      responses:
        '200':
          description: |
            Expected resposne to a successful request.
        '401':
          $ref: '#/responses/Unauthorized'
        '400':
          $ref: '#/responses/BadRequest'

  "/datasets/{dataset}/vessels":
    get:
      summary: |
        Searches for vessels
      description: |
        Searches for a vessel given a free form query. The query will be matched against any identifiers for the vessel, and a paginated, ranked results list will be returned.
      produces:
        - application/json
      parameters:
        - name: dataset
          in: path
          description: |
            Dataset to query vessels from
          required: true
          type: string
        - name: query
          in: query
          description: |
            Search query.
          required: true
          type: string
        - name: limit
          in: query
          description: |
            Amount of search results to return. Maximum 25.
          required: false
          type: integer
          maximum: 25
          default: 10
        - name: offset
          in: query
          description: |
            Offset into the search results, used for pagination.
          required: false
          type: integer
          default: 0
      responses:
        '200':
          description: |
            Expected response to a successful request.
        '401':
          $ref: '#/responses/Unauthorized'
        '400':
          $ref: '#/responses/BadRequest'

  "/datasets/{dataset}/vessels/{vesselId}":
    get:
      summary: |
        Obtains the characteristics of a single vessel
      description: |
        Obtains all the characteristics that describe a single vessel, such as its name and identifiers.
      produces:
        - application/json
      parameters:
        - name: dataset
          in: path
          description: |
            Dataset to query the vessel from
          required: true
          type: string
        - name: vesselId
          in: path
          description: |
            Id of the vessel to get the characteristics from
          required: true
          type: string
      responses:
        '200':
          description: |
            Expected resposne to a successful request.
        '401':
          $ref: '#/responses/Unauthorized'
        '400':
          $ref: '#/responses/BadRequest'

  "/datasets/{dataset}/vessels/{vesselId}/tracks":
    get:
      summary: |
        Gets the tracks of a single vessel
      description: |
        Obtains all the tracks of a single vessel.
      produces:
        - application/vnd.geo+json
      parameters:
        - name: dataset
          in: path
          description: |
            Name of the dataset you want to query
          required: true
          type: string
        - name: vesselId
          in: path
          description: |
            Id of the vessel to get the tracks for
          required: true
          type: string
        - name: features
          in: query
          description: |
            Comma-separated list of additional features to include in the
            tracks, such as points classified as fishing, per-point speed and
            courses, etc.
          type: array
          items:
            type: string
            enum:
              - fishing
              - speed
              - course
        - name: format
          in: query
          description: |
            Specific encoding format to use for the track. While the track is
            always returned as GeoJSON, you can ask for either a single
            `LineString` feature containing all the points in the track, or a
            `FeatureCollection` containing a `Point` feature for every point in
            the track.
          type: string
          enum:
            - lines
            - points
          default: lines
      responses:
        '200':
          description: |
            Expected resposne to a successful request.
        '401':
          $ref: '#/responses/Unauthorized'
        '400':
          $ref: '#/responses/BadRequest'
